/* +++++ BASE DE DATOS DE PROYECTO SARC +++++ */
-- CREATE DATABASE sarc_db;

USE sarc_db;

-- =========================
-- TABLA DE ROLES
-- =========================
CREATE TABLE ROLES (
    ROL_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del rol',
    ROL_NOMBRE VARCHAR(100) NOT NULL UNIQUE COMMENT 'Nombre del rol (Cliente, Agente, Supervisor, Admin)',
    ROL_FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora de creación del rol',
    ROL_FUM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Fecha de última modificación del rol',
    ROL_ESTADO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico del rol (ACTIVO/INACTIVO)'
) ENGINE=INNODB COMMENT='Catálogo de roles disponibles en el sistema';


-- =========================
-- TABLA DE AGENCIA
-- =========================
CREATE TABLE AGENCIA (
    AGE_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único de la agencia',
    AGE_NOMBRE VARCHAR(150) NOT NULL COMMENT 'Nombre de la agencia o sucursal',
    AGE_DIRECCION VARCHAR(255) NULL COMMENT 'Dirección física de la agencia',
    AGE_TELEFONO VARCHAR(20) NULL COMMENT 'Teléfono de contacto de la agencia',
    AGE_ESTADO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico de la agencia (ACTIVO/INACTIVO)'
) ENGINE=INNODB COMMENT='Agencias o sucursales de la empresa Luz El Faro';


-- =========================
-- TABLA DE USUARIOS
-- =========================
CREATE TABLE USUARIOS (
    USU_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del usuario',
    USU_ROL_ID INT NOT NULL COMMENT 'FK: Código del rol asignado al usuario',
    USU_AGENCIA_ID INT NULL COMMENT 'FK: Agencia a la que pertenece el usuario (NULL para administradores globales)',
    USU_USERNAME VARCHAR(100) NOT NULL UNIQUE COMMENT 'Nombre de usuario único para inicio de sesión',
    USU_EMAIL VARCHAR(200) NOT NULL UNIQUE COMMENT 'Correo electrónico único del usuario',
    USU_CLAVE VARCHAR(255) NOT NULL COMMENT 'Contraseña encriptada del usuario',
    USU_FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora de creación del usuario',
    USU_FUM TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Fecha de última modificación del usuario',
    USU_ESTADO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico del usuario (ACTIVO/INACTIVO/BLOQUEADO)',
    CONSTRAINT FK_USU_ROL FOREIGN KEY (USU_ROL_ID) REFERENCES ROLES (ROL_CODIGO),
    CONSTRAINT FK_USU_AGENCIA FOREIGN KEY (USU_AGENCIA_ID) REFERENCES AGENCIA (AGE_CODIGO)
) ENGINE=INNODB COMMENT='Usuarios del sistema (Clientes, Agentes, Supervisores, Administradores)';


-- =========================
-- TABLA DE CLIENTES
-- =========================
CREATE TABLE CLIENTES (
    CLI_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del cliente',
    CLI_USUARIO_ID INT NOT NULL COMMENT 'FK: Relaciona cliente con su cuenta de usuario',
    CLI_FECHA_NAC DATE NULL COMMENT 'Fecha de nacimiento del cliente',
    CLI_PRIMER_NOM VARCHAR(60) NOT NULL COMMENT 'Primer nombre del cliente',
    CLI_SEGUNDO_NOM VARCHAR(60) NULL COMMENT 'Segundo nombre del cliente (opcional)',
    CLI_PRIMER_APE VARCHAR(60) NOT NULL COMMENT 'Primer apellido del cliente',
    CLI_SEGUNDO_APE VARCHAR(60) NULL COMMENT 'Segundo apellido del cliente (opcional)',
    CLI_TELEFONO VARCHAR(15) NULL COMMENT 'Número de teléfono del cliente',
    CLI_DUI VARCHAR(20) NOT NULL UNIQUE COMMENT 'Documento Único de Identidad',
    CLI_FECHA_REGISTRO TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha de creación del perfil de cliente',
    CLI_ESTADO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico del cliente (ACTIVO/INACTIVO)',
    CONSTRAINT FK_CLI_USUARIO FOREIGN KEY (CLI_USUARIO_ID) REFERENCES USUARIOS (USU_CODIGO) ON DELETE CASCADE
) ENGINE=INNODB COMMENT='Clientes registrados en el sistema';


-- =========================
-- TABLA DE ESTADOS DE TICKET
-- =========================
CREATE TABLE ESTADO_TICKET (
    EST_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del estado de ticket',
    EST_NOMBRE VARCHAR(50) NOT NULL UNIQUE COMMENT 'Nombre del estado (RECIBIDO, ASIGNADO, EN_PROCESO, ESCALADO, PENDIENTE, COMPLETADO)',
    EST_DESCRIPCION VARCHAR(255) NULL COMMENT 'Descripción del estado'
) ENGINE=INNODB COMMENT='Catálogo de estados disponibles para los tickets';


-- =========================
-- TABLA DE AREAS
-- =========================
CREATE TABLE AREA (
    AREA_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del área',
    AREA_NOMBRE VARCHAR(100) NOT NULL UNIQUE COMMENT 'Nombre del área (Contabilidad, Soporte, etc.)',
    AREA_DESCRIPCION VARCHAR(255) NULL COMMENT 'Descripción breve del área',
    AREA_ESTADO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico del área'
) ENGINE=INNODB COMMENT='Áreas de la empresa a las que pueden ser escalados los tickets';


-- =========================
-- TABLA DE TICKETS
-- =========================
CREATE TABLE TICKETS (
    TKT_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del ticket',
    TKT_CLIENTE_ID INT NOT NULL COMMENT 'FK: Cliente que creó el ticket',
    TKT_AGENCIA_ID INT NOT NULL COMMENT 'FK: Agencia seleccionada para el ticket',
    TKT_AREA_ID INT NULL COMMENT 'FK: Área asignada si el ticket es escalado',
    TKT_ESTADO_ID INT NOT NULL COMMENT 'FK: Estado actual del ticket',
    TKT_ASUNTO VARCHAR(200) NOT NULL COMMENT 'Título o asunto del ticket',
    TKT_DESCRIPCION TEXT NOT NULL COMMENT 'Descripción detallada del reclamo',
    TKT_FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora de creación del ticket',
    TKT_FECHA_ASIGNACION TIMESTAMP NULL COMMENT 'Fecha y hora de asignación a un agente',
    TKT_FECHA_CIERRE TIMESTAMP NULL COMMENT 'Fecha y hora de cierre del ticket',
    TKT_PRIORIDAD VARCHAR(20) NOT NULL DEFAULT 'MEDIA' COMMENT 'Prioridad del ticket (BAJA/MEDIA/ALTA)',
    TKT_ORIGEN VARCHAR(20) NULL COMMENT 'Origen del ticket (WEB/LLAMADA/PRESENCIAL)',
    TKT_ESTADO_LOGICO VARCHAR(20) NOT NULL DEFAULT 'ACTIVO' COMMENT 'Estado lógico del ticket (ACTIVO/ELIMINADO)',
    CONSTRAINT FK_TKT_CLIENTE FOREIGN KEY (TKT_CLIENTE_ID) REFERENCES CLIENTES (CLI_CODIGO),
    CONSTRAINT FK_TKT_AGENCIA FOREIGN KEY (TKT_AGENCIA_ID) REFERENCES AGENCIA (AGE_CODIGO),
    CONSTRAINT FK_TKT_AREA FOREIGN KEY (TKT_AREA_ID) REFERENCES AREA (AREA_CODIGO),
    CONSTRAINT FK_TKT_ESTADO FOREIGN KEY (TKT_ESTADO_ID) REFERENCES ESTADO_TICKET (EST_CODIGO)
) ENGINE=INNODB COMMENT='Tickets creados por clientes para atención de reclamos';


-- =========================
-- TABLA DE ASIGNACIÓN DE TICKETS
-- =========================
CREATE TABLE ASIGNACION_TICKET (
    ASIG_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único de la asignación',
    ASIG_TKT_ID INT NOT NULL COMMENT 'FK: Ticket asignado',
    ASIG_USUARIO_ID INT NOT NULL COMMENT 'FK: Usuario (agente) asignado al ticket',
    ASIG_FECHA TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora de la asignación',
    ASIG_TIPO VARCHAR(30) NOT NULL DEFAULT 'AUTOMATICA' COMMENT 'Tipo de asignación (AUTOMATICA/MANUAL/REASIGNACION)',
    ASIG_OBSERVACION VARCHAR(255) NULL COMMENT 'Observación de la asignación',
    ASIG_FINALIZADA CHAR(1) NOT NULL DEFAULT 'N' COMMENT 'Indica si la asignación ha finalizado (S/N)',
    CONSTRAINT FK_ASIG_TKT FOREIGN KEY (ASIG_TKT_ID) REFERENCES TICKETS (TKT_CODIGO),
    CONSTRAINT FK_ASIG_USUARIO FOREIGN KEY (ASIG_USUARIO_ID) REFERENCES USUARIOS (USU_CODIGO)
) ENGINE=INNODB COMMENT='Histórico de asignaciones de tickets a agentes';


-- =========================
-- TABLA DE HISTORIAL DE TICKETS
-- =========================
CREATE TABLE HISTORIAL_TICKET (
    HIST_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del historial',
    HIST_TKT_ID INT NOT NULL COMMENT 'FK: Ticket asociado al historial',
    HIST_USUARIO_ID INT NULL COMMENT 'FK: Usuario que realizó el cambio (NULL si fue automático)',
    HIST_ESTADO_ANT INT NULL COMMENT 'FK: Estado anterior del ticket',
    HIST_ESTADO_NUEVO INT NOT NULL COMMENT 'FK: Estado nuevo del ticket',
    HIST_FECHA TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora del cambio',
    HIST_COMENTARIO TEXT NULL COMMENT 'Comentario asociado al cambio',
    HIST_ASIGNACION_ID INT NULL COMMENT 'FK: Asignación relacionada (si aplica)',
    CONSTRAINT FK_HIST_TKT FOREIGN KEY (HIST_TKT_ID) REFERENCES TICKETS (TKT_CODIGO),
    CONSTRAINT FK_HIST_USUARIO FOREIGN KEY (HIST_USUARIO_ID) REFERENCES USUARIOS (USU_CODIGO),
    CONSTRAINT FK_HIST_ESTADO_ANT FOREIGN KEY (HIST_ESTADO_ANT) REFERENCES ESTADO_TICKET (EST_CODIGO),
    CONSTRAINT FK_HIST_ESTADO_NUEVO FOREIGN KEY (HIST_ESTADO_NUEVO) REFERENCES ESTADO_TICKET (EST_CODIGO),
    CONSTRAINT FK_HIST_ASIGNACION FOREIGN KEY (HIST_ASIGNACION_ID) REFERENCES ASIGNACION_TICKET (ASIG_CODIGO)
) ENGINE=INNODB COMMENT='Historial de cambios de estado y acciones sobre tickets';


-- =========================
-- TABLA DE COMENTARIOS DE TICKETS
-- =========================
CREATE TABLE COMENTARIO_TICKET (
    COM_CODIGO INT NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'Identificador único del comentario',
    COM_TKT_ID INT NOT NULL COMMENT 'FK: Ticket asociado al comentario',
    COM_USUARIO_ID INT NULL COMMENT 'FK: Usuario autor del comentario (NULL si externo)',
    COM_FECHA TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Fecha y hora del comentario',
    COM_MENSAJE TEXT NOT NULL COMMENT 'Texto del comentario',
    CONSTRAINT FK_COM_TKT FOREIGN KEY (COM_TKT_ID) REFERENCES TICKETS (TKT_CODIGO),
    CONSTRAINT FK_COM_USUARIO FOREIGN KEY (COM_USUARIO_ID) REFERENCES USUARIOS (USU_CODIGO)
) ENGINE=INNODB COMMENT='Comentarios y notas asociados a los tickets';



-- ++++++++++++++++++++++++++++++ PROCESOS ALMACENADOS; TRIGGER Y VISTAS ++++++++++++++++++++++++

--  ++++ PROCEDIMIENTO QUE HACE LA INSERCION DE USUARIO - CLIENTE ++++++
DELIMITER $$
CREATE PROCEDURE IF NOT EXISTS SP_REGISTRO_CLIENTE(
    IN U_ROL_ID INT,
    IN U_USERNAME VARCHAR(100),
    IN U_EMAIL VARCHAR(200),
    IN U_CLAVE VARCHAR(100),
    IN C_FECHA_NAC DATE,
    IN C_PRIMER_NOMBRE VARCHAR(60),
    IN C_SEGUNDO_NOMBRE VARCHAR(60),
    IN C_PRIMER_APELLIDO VARCHAR(60),
    IN C_SEGUNDO_APELLIDO VARCHAR(60),
    IN C_TELEFONO VARCHAR(10),
    IN C_DUI VARCHAR(10)
)
BEGIN
    DECLARE ID_USUARIO INT UNSIGNED;
    -- INSERSION DE USUARIO
    INSERT INTO USUARIOS(USU_ROL_ID, USU_USERNAME, USU_EMAIL, USU_CLAVE)
    VALUES(
              U_ROL_ID,
              U_USERNAME,
              U_EMAIL,
              U_CLAVE );

    -- UNA VEZ INSERTADO, TOMO EL ID RECIEN CREADO PARA ASOCIARLO A LA TABLA CLIENTES
    SET ID_USUARIO = LAST_INSERT_ID();

    -- INSERSION DE LA TABLA CLIENTES
    INSERT INTO CLIENTES(CLI_USUARIO_ID, CLI_FECHA_NAC, CLI_PRIMER_NOM, CLI_SEGUNDO_NOM, CLI_PRIMER_APE, CLI_SEGUNDO_APE, CLI_TELEFONO, CLI_DUI)
    VALUES( ID_USUARIO,
            C_FECHA_NAC,
            C_PRIMER_NOMBRE,
            C_SEGUNDO_NOMBRE,
            C_PRIMER_APELLIDO,
            C_SEGUNDO_APELLIDO,
            C_TELEFONO,
                C_DUI
          );
END $$

DELIMITER ;



-- ++++++++ VISTA DE DATOS DE CLIENTE ++++++++++++
CREATE VIEW VW_DATOS_CLIENTES AS
SELECT
    C.CLI_CODIGO AS CODIGO,
    U.USU_USERNAME AS USERNAME,
    U.USU_EMAIL AS EMAIL,
    R.ROL_NOMBRE AS ROL,
    C.CLI_PRIMER_NOM AS PRIMER_NOM,
    C.CLI_SEGUNDO_NOM AS SEGUNDO_NOM,
    C.CLI_PRIMER_APE AS PRIMER_APE,
    C.CLI_SEGUNDO_APE AS SEGUNDO_APE,
    C.CLI_FECHA_NAC AS FECHA_NACIMIENTO,
    C.CLI_TELEFONO AS TELEFONO,
    C.CLI_DUI AS DUI,
    C.CLI_ESTADO AS ESTADO
FROM CLIENTES C
         INNER JOIN USUARIOS U
                    ON U.USU_CODIGO = C.CLI_USUARIO_ID
         INNER JOIN ROLES R
                    ON R.ROL_CODIGO = U.USU_ROL_ID;